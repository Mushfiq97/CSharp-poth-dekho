<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>